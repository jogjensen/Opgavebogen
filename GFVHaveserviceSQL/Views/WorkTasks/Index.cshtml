@model IEnumerable<GFVHaveserviceSQL.Models.WorkTask>
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
<h2>@Localizer["Tasks"]</h2>
@if (User.IsInRole("Admin"))
{
    <p><a asp-action="Create">@Localizer["CreateNewTask"]</a></p>

    <form method="get" class="mb-3 form-inline">
        <div class="form-group mr-2">
            <label class="mr-1">@Localizer["Date"]</label>
            <input type="date" name="date" value="@ViewBag.Date" class="form-control" />
        </div>
        <div class="form-group mr-2">
            <label class="mr-1">@Localizer["Worker"]</label>
            <select name="workerId" class="form-control" asp-items="@(new SelectList(ViewBag.Workers as IEnumerable<GFVHaveserviceSQL.Models.ApplicationUser>, "Id", "UserName"))">
                <option value="">@Localizer["All"]</option>
            </select>
        </div>
        <input type="hidden" name="showCompleted" value="@ViewBag.ShowCompleted" />
        <button type="submit" class="btn btn-primary mr-2">@Localizer["Filter"]</button>
        <a asp-action="Index" class="btn btn-secondary">@Localizer["Reset"]</a>
    </form>
}

<ul class="nav nav-tabs mb-3">
    <li class="nav-item">
        <a class="nav-link @(ViewBag.ShowCompleted ? "" : "active")" asp-action="Index" asp-route-showCompleted="false">@Localizer["Open"]</a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(ViewBag.ShowCompleted ? "active" : "")" asp-action="Index" asp-route-showCompleted="true">@Localizer["Completed"]</a>
    </li>
</ul>
<table class="table table-striped table-hover">
    <tr>
        <th>
            <a asp-action="Index" asp-route-sortOrder="@(ViewBag.SortOrder == "name" ? "name_desc" : "name")">@Localizer["Name"]</a>
        </th>
        <th>@Localizer["Description"]</th>
        <th>@Localizer["Customer"]</th>
        <th>@Localizer["Workers"]</th>
        <th>@Localizer["Id"]</th>
        <th>
            <a asp-action="Index" asp-route-sortOrder="@(ViewBag.SortOrder == "date" ? "date_desc" : "date")">@Localizer["Scheduled"]</a>
        </th>
        <th>@Localizer["Status"]</th>
        <th>@Localizer["TimeMinutes"]</th>
        @if (User.IsInRole("Admin"))
        {
            <th>@Localizer["CompletedOn"]</th>
        }
        <th></th>
    </tr>
@{
    var grouped = Model.GroupBy(t => t.IsRecurring
        ? $"{t.Name}-{t.CustomerId}-{t.RecurrenceDays}-{t.RecurrenceEndDate}"
        : $"single-{t.Id}").ToList();
    var groupIndex = 0;
}
@foreach (var group in grouped)
{
    var main = group.First();
    var hasMany = main.IsRecurring && group.Count() > 1;
    <tr>
        <td>
            <a asp-action="Details" asp-route-id="@main.Id">@main.Name</a>
            @if (hasMany)
            {
                <button class="btn btn-sm btn-link" type="button" data-bs-toggle="collapse" data-bs-target=".recurring-@groupIndex">@Localizer["Show"] (@group.Count())</button>
            }
        </td>
        <td>@main.TaskDescription</td>
        <td>
            @if (main.Customer != null)
            {
                <a asp-controller="Customers" asp-action="Details" asp-route-id="@main.CustomerId">@main.Customer.Name</a>
            }
        </td>
        <td>@string.Join(", ", main.AssignedWorkers.Select(w => w.UserName))</td>
        <td>@main.PublicId</td>
        <td>@main.ScheduledDate?.ToString("yyyy-MM-dd HH:mm")</td>
        <td>@main.Status</td>
        <td>@main.TakenTime</td>
        @if (User.IsInRole("Admin"))
        {
            <td>@main.CompletedOn?.ToString("yyyy-MM-dd HH:mm")</td>
        }
        <td>
            <a asp-controller="WorkLogs" asp-action="Create" asp-route-taskId="@main.Id">@Localizer["Punch"]</a>
        </td>
    </tr>
    if (hasMany)
    {
        foreach (var item in group.Skip(1))
        {
            <tr class="collapse recurring-@groupIndex">
                <td><a asp-action="Details" asp-route-id="@item.Id">@item.Name</a></td>
                <td>@item.TaskDescription</td>
                <td>
                    @if (item.Customer != null)
                    {
                        <a asp-controller="Customers" asp-action="Details" asp-route-id="@item.CustomerId">@item.Customer.Name</a>
                    }
                </td>
                <td>@string.Join(", ", item.AssignedWorkers.Select(w => w.UserName))</td>
                <td>@item.PublicId</td>
                <td>@item.ScheduledDate?.ToString("yyyy-MM-dd HH:mm")</td>
                <td>@item.Status</td>
                <td>@item.TakenTime</td>
                @if (User.IsInRole("Admin"))
                {
                    <td>@item.CompletedOn?.ToString("yyyy-MM-dd HH:mm")</td>
                }
                <td>
                    <a asp-controller="WorkLogs" asp-action="Create" asp-route-taskId="@item.Id">@Localizer["Punch"]</a>
                </td>
            </tr>
        }
    }
    groupIndex++;
}
</table>
