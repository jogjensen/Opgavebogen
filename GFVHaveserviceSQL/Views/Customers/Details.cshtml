@model GFVHaveserviceSQL.Models.Customer
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
<h2>@Localizer["CustomerDetails"]</h2>
<div>
    <dl class="row">
        <dt class="col-sm-2">@Localizer["Name"]</dt>
        <dd class="col-sm-10">@Model.Name</dd>
        <dt class="col-sm-2">@Localizer["Telephone"]</dt>
        <dd class="col-sm-10">@Model.Telephone</dd>
        <dt class="col-sm-2">@Localizer["Address"]</dt>
        <dd class="col-sm-10">@Model.Address</dd>
        <dt class="col-sm-2">@Localizer["LastVisited"]</dt>
        <dd class="col-sm-10">@Model.LastVisited?.ToString("d")</dd>
        <dt class="col-sm-2">@Localizer["NextVisit"]</dt>
        <dd class="col-sm-10">@Model.NextVisit?.ToString("d")</dd>
    </dl>
</div>
@{
    var tasks = ViewBag.Tasks as IEnumerable<GFVHaveserviceSQL.Models.WorkTask>;
}
<h3 class="mt-4">@Localizer["Tasks"]</h3>
@if (tasks != null && tasks.Any())
{
    <table class="table table-striped table-hover">
        <tr>
            <th>@Localizer["Name"]</th>
            <th>@Localizer["Scheduled"]</th>
            <th>@Localizer["Status"]</th>
        </tr>
    @foreach (var t in tasks)
    {
        <tr>
            <td><a asp-controller="WorkTasks" asp-action="Details" asp-route-id="@t.Id">@t.Name</a></td>
            <td>@t.ScheduledDate?.ToString("yyyy-MM-dd")</td>
            <td>@t.Status</td>
        </tr>
    }
    </table>
}
else
{
    <p>@Localizer["NoTasks"]</p>
}
<a asp-action="Index" class="btn btn-secondary">@Localizer["Back"]</a>
